// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  email     String    @unique
  username  String
  password  String
  //add avatar link
  posts      Post[]     
  responses  Response[] 
  responseVotes ResponseVote[] 
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt 
}

model Post {
  id             String         @id @default(uuid())
  title          String
  initialContent String
  currentContent String?
  user           User           @relation(fields: [userId], references: [id])
  userId         String
  responses      Response[]
  responseVotes  ResponseVote[]  // Holds relation with ResponseVote
  postHistories  PostHistory[]
  nextEditTime   DateTime
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
}

model ResponseVote {
  id         String    @id @default(uuid())
  response   Response  @relation(fields: [responseId], references: [id])
  responseId String
  user       User      @relation(fields: [userId], references: [id])
  userId     String
  post       Post      @relation(fields: [postId], references: [id]) 
  postId     String
  createdAt  DateTime  @default(now())
}

model Response {
  id         String         @id @default(uuid())
  content    String     
  user       User        @relation(fields: [userId], references: [id])
  userId     String      
  post       Post        @relation(fields: [postId], references: [id])
  postId     String      
  responseVotes ResponseVote[]
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
}

model PostHistory {
  id         String      @id @default(uuid())
  post       Post     @relation(fields: [postId], references: [id])
  postId     String      
  content    String   
  editedAt   DateTime @default(now())
  //Also add version number into the schema
}
